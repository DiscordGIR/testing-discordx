{"version":3,"sources":["../src/main.ts"],"sourcesContent":["import { dirname, importx } from \"@discordx/importer\";\nimport type { Interaction, Message } from \"discord.js\";\nimport { IntentsBitField } from \"discord.js\";\nimport { Client } from \"discordx\";\nimport * as dotenv from 'dotenv';\nimport { createColors } from \"colorette\"\n\nconst { gray, yellow } = createColors({ useColor: false })\n\ndotenv.config();\n\nexport const bot = new Client({\n  // To use only guild command\n  botGuilds: [process.env.MAIN_GUILD_ID],\n\n  // Discord intents\n  intents: [\n    IntentsBitField.Flags.Guilds,\n    IntentsBitField.Flags.GuildMembers,\n    IntentsBitField.Flags.GuildMessages,\n    IntentsBitField.Flags.GuildMessageReactions,\n    IntentsBitField.Flags.GuildVoiceStates,\n    IntentsBitField.Flags.MessageContent,\n  ],\n\n  // Debug logs are disabled in silent mode\n  silent: false,\n\n  // Configuration for @SimpleCommand\n  simpleCommand: {\n    prefix: \"!\",\n  },\n});\n\nbot.once(\"ready\", async () => {\n  // Make sure all guilds are cached\n  await bot.guilds.fetch();\n\n  // Synchronize applications commands with Discord\n  // await bot.clearApplicationCommands();\n  await bot.initApplicationCommands();\n\n  // To clear all guild commands, uncomment this line,\n  // This is useful when moving from guild commands to global commands\n  // It must only be executed once\n  //\n  //  await bot.clearApplicationCommands(\n  //    ...bot.guilds.cache.map((g) => g.id)\n  //  );\n  console.log(`Logged in as ${gray(bot.user?.tag || 'adsf')}`)\n});\n\nbot.on(\"interactionCreate\", (interaction: Interaction) => {\n  bot.executeInteraction(interaction);\n});\n\nbot.on(\"messageCreate\", (message: Message) => {\n  bot.executeCommand(message);\n});\n\nasync function run() {\n  // The following syntax should be used in the commonjs environment\n  //\n  await importx(__dirname + \"/{events,commands}/**/*.{ts,js}\");\n\n  // Let's start the bot\n  if (!process.env.BOT_TOKEN) {\n    throw Error(\"Could not find BOT_TOKEN in your environment\");\n  }\n\n  // Log in with your bot token\n  const date = new Date()\n  await bot.login(process.env.BOT_TOKEN);\n  const time = new Date().getTime() - date.getTime()\n  console.log(`Bot launched in ${time}ms`)\n  bot.applicationCommandSlashGroups.map(group => {\n    // ├─\n    // └─\n    console.log(yellow(`├─ Slash group \"${group.name}\" loaded`))\n  })\n}\n\nrun();\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiC;AAEjC,qBAAgC;AAChC,sBAAuB;AACvB,aAAwB;AACxB,uBAA6B;AAE7B,MAAM,EAAE,MAAM,OAAO,QAAI,+BAAa,EAAE,UAAU,MAAM,CAAC;AAEzD,OAAO,OAAO;AAEP,MAAM,MAAM,IAAI,uBAAO;AAAA;AAAA,EAE5B,WAAW,CAAC,QAAQ,IAAI,aAAa;AAAA;AAAA,EAGrC,SAAS;AAAA,IACP,+BAAgB,MAAM;AAAA,IACtB,+BAAgB,MAAM;AAAA,IACtB,+BAAgB,MAAM;AAAA,IACtB,+BAAgB,MAAM;AAAA,IACtB,+BAAgB,MAAM;AAAA,IACtB,+BAAgB,MAAM;AAAA,EACxB;AAAA;AAAA,EAGA,QAAQ;AAAA;AAAA,EAGR,eAAe;AAAA,IACb,QAAQ;AAAA,EACV;AACF,CAAC;AAED,IAAI,KAAK,SAAS,YAAY;AAE5B,QAAM,IAAI,OAAO,MAAM;AAIvB,QAAM,IAAI,wBAAwB;AASlC,UAAQ,IAAI,gBAAgB,KAAK,IAAI,MAAM,OAAO,MAAM,CAAC,EAAE;AAC7D,CAAC;AAED,IAAI,GAAG,qBAAqB,CAAC,gBAA6B;AACxD,MAAI,mBAAmB,WAAW;AACpC,CAAC;AAED,IAAI,GAAG,iBAAiB,CAAC,YAAqB;AAC5C,MAAI,eAAe,OAAO;AAC5B,CAAC;AAED,eAAe,MAAM;AAGnB,YAAM,yBAAQ,YAAY,iCAAiC;AAG3D,MAAI,CAAC,QAAQ,IAAI,WAAW;AAC1B,UAAM,MAAM,8CAA8C;AAAA,EAC5D;AAGA,QAAM,OAAO,oBAAI,KAAK;AACtB,QAAM,IAAI,MAAM,QAAQ,IAAI,SAAS;AACrC,QAAM,QAAO,oBAAI,KAAK,GAAE,QAAQ,IAAI,KAAK,QAAQ;AACjD,UAAQ,IAAI,mBAAmB,IAAI,IAAI;AACvC,MAAI,8BAA8B,IAAI,WAAS;AAG7C,YAAQ,IAAI,OAAO,6BAAmB,MAAM,IAAI,UAAU,CAAC;AAAA,EAC7D,CAAC;AACH;AApBe;AAsBf,IAAI;","names":[]}