{"version":3,"sources":["../../src/commands/slash group.ts"],"sourcesContent":["import type { CommandInteraction } from \"discord.js\";\nimport { ApplicationCommandOptionType } from \"discord.js\";\nimport { Discord, Slash, SlashGroup, SlashOption } from \"discordx\";\n\n@Discord()\n@SlashGroup({ description: \"testing\", name: \"testing\" })\n@SlashGroup({ description: \"maths\", name: \"maths\", root: \"testing\" })\nexport class GroupExample {\n  @Slash({ description: \"add\" })\n  @SlashGroup(\"maths\", \"testing\")\n  add(\n    @SlashOption({\n      description: \"x value\",\n      name: \"x\",\n      required: true,\n      type: ApplicationCommandOptionType.Number,\n    })\n    x: number,\n    @SlashOption({\n      description: \"y value\",\n      name: \"y\",\n      required: true,\n      type: ApplicationCommandOptionType.Number,\n    })\n    y: number,\n    interaction: CommandInteraction\n  ): void {\n    interaction.reply(String(x + y));\n  }\n\n  @Slash({ description: \"multiply\" })\n  @SlashGroup(\"maths\", \"testing\")\n  multiply(\n    @SlashOption({\n      description: \"x value\",\n      name: \"x\",\n      required: true,\n      type: ApplicationCommandOptionType.Number,\n    })\n    x: number,\n    @SlashOption({\n      description: \"y value\",\n      name: \"y\",\n      required: true,\n      type: ApplicationCommandOptionType.Number,\n    })\n    y: number,\n    interaction: CommandInteraction\n  ): void {\n    interaction.reply(String(x * y));\n  }\n\n  @Slash({ description: \"root\" })\n  @SlashGroup(\"testing\")\n  root(\n    @SlashOption({\n      description: \"text\",\n      name: \"text\",\n      required: true,\n      type: ApplicationCommandOptionType.String,\n    })\n    text: string,\n    interaction: CommandInteraction\n  ): void {\n    interaction.reply(text);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,qBAA6C;AAC7C,sBAAwD;AAKjD,IAAM,eAAN,MAAmB;AAAA,EAGxB,IAOE,GAOA,GACA,aACM;AACN,gBAAY,MAAM,OAAO,IAAI,CAAC,CAAC;AAAA,EACjC;AAAA,EAIA,SAOE,GAOA,GACA,aACM;AACN,gBAAY,MAAM,OAAO,IAAI,CAAC,CAAC;AAAA,EACjC;AAAA,EAIA,KAOE,MACA,aACM;AACN,gBAAY,MAAM,IAAI;AAAA,EACxB;AACF;AA3D0B;AAGxB;AAAA,MAFC,uBAAM,EAAE,aAAa,MAAM,CAAC;AAAA,MAC5B,4BAAW,SAAS,SAAS;AAAA,EAE3B,oDAAY;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM,4CAA6B;AAAA,EACrC,CAAC;AAAA,EAEA,oDAAY;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM,4CAA6B;AAAA,EACrC,CAAC;AAAA,GAhBQ,aAGX;AAsBA;AAAA,MAFC,uBAAM,EAAE,aAAa,WAAW,CAAC;AAAA,MACjC,4BAAW,SAAS,SAAS;AAAA,EAE3B,oDAAY;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM,4CAA6B;AAAA,EACrC,CAAC;AAAA,EAEA,oDAAY;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM,4CAA6B;AAAA,EACrC,CAAC;AAAA,GAtCQ,aAyBX;AAsBA;AAAA,MAFC,uBAAM,EAAE,aAAa,OAAO,CAAC;AAAA,MAC7B,4BAAW,SAAS;AAAA,EAElB,oDAAY;AAAA,IACX,aAAa;AAAA,IACb,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM,4CAA6B;AAAA,EACrC,CAAC;AAAA,GArDQ,aA+CX;AA/CW,eAAN;AAAA,MAHN,yBAAQ;AAAA,MACR,4BAAW,EAAE,aAAa,WAAW,MAAM,UAAU,CAAC;AAAA,MACtD,4BAAW,EAAE,aAAa,SAAS,MAAM,SAAS,MAAM,UAAU,CAAC;AAAA,GACvD;","names":[]}